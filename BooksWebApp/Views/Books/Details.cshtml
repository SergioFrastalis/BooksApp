@model BooksWebApp.Core.Entities.Book

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Book</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Author)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Author)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PublishedYear)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PublishedYear)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Genre)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Genre)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
    <h4>Reviews</h4>

    @if (ViewBag.Reviews == null || ViewBag.Reviews.Count == 0)
    {
        <p>No reviews yet.</p>
    }
    else
    {
        <ul class="list-group mb-3">
            @foreach (var review in ViewBag.Reviews)
            {
                var upvotes = ((IEnumerable<BooksWebApp.Core.Entities.ReviewVote>)review.Votes).Count(v => v.IsUpvote);
                var downvotes = ((IEnumerable<BooksWebApp.Core.Entities.ReviewVote>)review.Votes).Count(v => !v.IsUpvote);

                <li class="list-group-item">
                    <strong>@review.User?.UserName</strong> - ⭐ @review.Rating<br />
                    @review.Content <br />
                    <small class="text-muted">@review.DateCreated.ToShortDateString()</small><br />

                    <span class="me-2">👍 @upvotes</span>
                    <span class="me-2">👎 @downvotes</span>

                    @if (User.Identity.IsAuthenticated)
                    {
                        <form method="post" asp-controller="Reviews" asp-action="Vote" asp-route-id="@review.Id" class="d-inline">
                            <input type="hidden" name="isUpvote" value="true" />
                            <button type="submit" class="btn btn-sm btn-outline-success">👍</button>
                        </form>
                        <form method="post" asp-controller="Reviews" asp-action="Vote" asp-route-id="@review.Id" class="d-inline">
                            <input type="hidden" name="isUpvote" value="false" />
                            <button type="submit" class="btn btn-sm btn-outline-danger">👎</button>
                        </form>
                    }
                </li>
            }
        </ul>

    }

    @if (User.Identity.IsAuthenticated)
    {
        <a class="btn btn-success" asp-controller="Reviews" asp-action="Create" asp-route-bookId="@Model.Id">Add Review</a>
    }
    else
    {
        <p>
            <em>
                <a href="/Identity/Account/Login">Login</a> to leave a review. <br />
                No account? <a href="/Identity/Account/Register">Register here</a>.
            </em>
        </p>
    }


</div>
